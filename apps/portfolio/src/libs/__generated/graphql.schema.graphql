directive @contentSourceMaps on QUERY

"""Represents a binary file in a space. An asset can be any file type."""
type Asset {
  contentType(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  fileName(locale: String): String
  height(locale: String): Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
  size(locale: String): Int
  sys: Sys!
  title(locale: String): String
  url(locale: String, transform: ImageTransformOptions): String
  width(locale: String): Int
}

type AssetCollection {
  items: [Asset]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AssetFilter {
  AND: [AssetFilter]
  OR: [AssetFilter]
  contentType: String
  contentType_contains: String
  contentType_exists: Boolean
  contentType_in: [String]
  contentType_not: String
  contentType_not_contains: String
  contentType_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  fileName: String
  fileName_contains: String
  fileName_exists: Boolean
  fileName_in: [String]
  fileName_not: String
  fileName_not_contains: String
  fileName_not_in: [String]
  height: Int
  height_exists: Boolean
  height_gt: Int
  height_gte: Int
  height_in: [Int]
  height_lt: Int
  height_lte: Int
  height_not: Int
  height_not_in: [Int]
  size: Int
  size_exists: Boolean
  size_gt: Int
  size_gte: Int
  size_in: [Int]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
  width: Int
  width_exists: Boolean
  width_gt: Int
  width_gte: Int
  width_in: [Int]
  width_lt: Int
  width_lte: Int
  width_not: Int
  width_not_in: [Int]
}

type AssetLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  seoComponentCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): SeoComponentCollection
  skillsModelCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): SkillsModelCollection
  workExperienceModelCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): WorkExperienceModelCollection
}

enum AssetOrder {
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  size_ASC
  size_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
  width_ASC
  width_DESC
}

type ContentfulMetadata {
  tags: [ContentfulTag]!
}

input ContentfulMetadataConceptsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

input ContentfulMetadataFilter {
  concepts: ContentfulMetadataConceptsFilter
  tags: ContentfulMetadataTagsFilter
  tags_exists: Boolean
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

"""
Represents a tag entity for finding and organizing content easily.
      Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String
  name: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.
"""
scalar Dimension

interface Entry {
  contentfulMetadata: ContentfulMetadata!
  sys: Sys!
}

type EntryCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input EntryFilter {
  AND: [EntryFilter]
  OR: [EntryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

enum EntryOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Hero component content type [See type definition](https://app.contentful.com/spaces/18rw1srlfa5x/content_types/heroComponent)
"""
type HeroComponent implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): HeroComponentDescription
  heading(locale: String): String
  linkedFrom(allowedLocales: [String]): HeroComponentLinkingCollections
  sys: Sys!
  title(locale: String): String
}

type HeroComponentCollection {
  items: [HeroComponent]!
  limit: Int!
  skip: Int!
  total: Int!
}

type HeroComponentDescription {
  json: JSON!
  links: HeroComponentDescriptionLinks!
}

type HeroComponentDescriptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type HeroComponentDescriptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type HeroComponentDescriptionLinks {
  assets: HeroComponentDescriptionAssets!
  entries: HeroComponentDescriptionEntries!
  resources: HeroComponentDescriptionResources!
}

type HeroComponentDescriptionResources {
  block: [HeroComponentDescriptionResourcesBlock!]!
  hyperlink: [HeroComponentDescriptionResourcesHyperlink!]!
  inline: [HeroComponentDescriptionResourcesInline!]!
}

type HeroComponentDescriptionResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type HeroComponentDescriptionResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type HeroComponentDescriptionResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

input HeroComponentFilter {
  AND: [HeroComponentFilter]
  OR: [HeroComponentFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  heading: String
  heading_contains: String
  heading_exists: Boolean
  heading_in: [String]
  heading_not: String
  heading_not_contains: String
  heading_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type HeroComponentLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum HeroComponentOrder {
  heading_ASC
  heading_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""The 'HexColor' type represents color in `rgb:ffffff` string format."""
scalar HexColor

enum ImageFormat {
  AVIF

  """JPG image format."""
  JPG

  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE

  """PNG image format"""
  PNG

  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8

  """WebP image format."""
  WEBP
}

enum ImageResizeFocus {
  """Focus the resizing on the bottom."""
  BOTTOM

  """Focus the resizing on the bottom left."""
  BOTTOM_LEFT

  """Focus the resizing on the bottom right."""
  BOTTOM_RIGHT

  """Focus the resizing on the center."""
  CENTER

  """Focus the resizing on the largest face."""
  FACE

  """Focus the resizing on the area containing all the faces."""
  FACES

  """Focus the resizing on the left."""
  LEFT

  """Focus the resizing on the right."""
  RIGHT

  """Focus the resizing on the top."""
  TOP

  """Focus the resizing on the top left."""
  TOP_LEFT

  """Focus the resizing on the top right."""
  TOP_RIGHT
}

enum ImageResizeStrategy {
  """
  Crops a part of the original image to fit into the specified dimensions.
  """
  CROP

  """
  Resizes the image to the specified dimensions, cropping the image if needed.
  """
  FILL

  """Resizes the image to fit into the specified dimensions."""
  FIT

  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD

  """
  Resizes the image to the specified dimensions, changing the original aspect ratio if needed.
  """
  SCALE

  """Creates a thumbnail from the image."""
  THUMB
}

input ImageTransformOptions {
  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor

  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int

  """Desired image format. Defaults to the original image format."""
  format: ImageFormat

  """Desired height in pixels. Defaults to the original image height."""
  height: Dimension

  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality

  """Desired resize focus area. Defaults to `CENTER`."""
  resizeFocus: ImageResizeFocus

  """Desired resize strategy. Defaults to `FIT`."""
  resizeStrategy: ImageResizeStrategy

  """Desired width in pixels. Defaults to the original image width."""
  width: Dimension
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
Page content model [See type definition](https://app.contentful.com/spaces/18rw1srlfa5x/content_types/pageContentModel)
"""
type PageContentModel implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  heroDescription(locale: String): PageContentModelHeroDescription
  heroHeading(locale: String): String
  linkedFrom(allowedLocales: [String]): PageContentModelLinkingCollections
  pageSection(locale: String): String
  sections(locale: String, preview: Boolean): Entry
  sys: Sys!
}

type PageContentModelCollection {
  items: [PageContentModel]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PageContentModelFilter {
  AND: [PageContentModelFilter]
  OR: [PageContentModelFilter]
  contentfulMetadata: ContentfulMetadataFilter
  heroDescription_contains: String
  heroDescription_exists: Boolean
  heroDescription_not_contains: String
  heroHeading: String
  heroHeading_contains: String
  heroHeading_exists: Boolean
  heroHeading_in: [String]
  heroHeading_not: String
  heroHeading_not_contains: String
  heroHeading_not_in: [String]
  pageSection: String
  pageSection_contains: String
  pageSection_exists: Boolean
  pageSection_in: [String]
  pageSection_not: String
  pageSection_not_contains: String
  pageSection_not_in: [String]
  sections_exists: Boolean
  sys: SysFilter
}

type PageContentModelHeroDescription {
  json: JSON!
  links: PageContentModelHeroDescriptionLinks!
}

type PageContentModelHeroDescriptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PageContentModelHeroDescriptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PageContentModelHeroDescriptionLinks {
  assets: PageContentModelHeroDescriptionAssets!
  entries: PageContentModelHeroDescriptionEntries!
  resources: PageContentModelHeroDescriptionResources!
}

type PageContentModelHeroDescriptionResources {
  block: [PageContentModelHeroDescriptionResourcesBlock!]!
  hyperlink: [PageContentModelHeroDescriptionResourcesHyperlink!]!
  inline: [PageContentModelHeroDescriptionResourcesInline!]!
}

type PageContentModelHeroDescriptionResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type PageContentModelHeroDescriptionResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type PageContentModelHeroDescriptionResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type PageContentModelLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum PageContentModelOrder {
  heroHeading_ASC
  heroHeading_DESC
  pageSection_ASC
  pageSection_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
The 'Quality' type represents quality as whole numeric values between `1` and `100`.
"""
scalar Quality

type Query {
  _node(id: ID!, locale: String, preview: Boolean): _Node
  asset(id: String!, locale: String, preview: Boolean): Asset
  assetCollection(limit: Int = 100, locale: String, order: [AssetOrder], preview: Boolean, skip: Int = 0, where: AssetFilter): AssetCollection
  entryCollection(limit: Int = 100, locale: String, order: [EntryOrder], preview: Boolean, skip: Int = 0, where: EntryFilter): EntryCollection
  heroComponent(id: String!, locale: String, preview: Boolean): HeroComponent
  heroComponentCollection(limit: Int = 100, locale: String, order: [HeroComponentOrder], preview: Boolean, skip: Int = 0, where: HeroComponentFilter): HeroComponentCollection
  pageContentModel(id: String!, locale: String, preview: Boolean): PageContentModel
  pageContentModelCollection(limit: Int = 100, locale: String, order: [PageContentModelOrder], preview: Boolean, skip: Int = 0, where: PageContentModelFilter): PageContentModelCollection
  seoComponent(id: String!, locale: String, preview: Boolean): SeoComponent
  seoComponentCollection(limit: Int = 100, locale: String, order: [SeoComponentOrder], preview: Boolean, skip: Int = 0, where: SeoComponentFilter): SeoComponentCollection
  skillsModel(id: String!, locale: String, preview: Boolean): SkillsModel
  skillsModelCollection(limit: Int = 100, locale: String, order: [SkillsModelOrder], preview: Boolean, skip: Int = 0, where: SkillsModelFilter): SkillsModelCollection
  socialLinksModel(id: String!, locale: String, preview: Boolean): SocialLinksModel
  socialLinksModelCollection(limit: Int = 100, locale: String, order: [SocialLinksModelOrder], preview: Boolean, skip: Int = 0, where: SocialLinksModelFilter): SocialLinksModelCollection
  workExperienceModel(id: String!, locale: String, preview: Boolean): WorkExperienceModel
  workExperienceModelCollection(limit: Int = 100, locale: String, order: [WorkExperienceModelOrder], preview: Boolean, skip: Int = 0, where: WorkExperienceModelFilter): WorkExperienceModelCollection
}

interface ResourceLink {
  sys: ResourceSys!
}

type ResourceSys {
  linkType: String!
  urn: String!
}

"""
SEO component content type [See type definition](https://app.contentful.com/spaces/18rw1srlfa5x/content_types/seoComponent)
"""
type SeoComponent implements Entry & _Node {
  _id: ID!
  canonicalUrl(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  keywords(locale: String): String
  linkedFrom(allowedLocales: [String]): SeoComponentLinkingCollections
  metaDescription(locale: String): String
  metaTitle(locale: String): String
  ogDescription(locale: String): String
  ogImage(locale: String, preview: Boolean): Asset
  ogTitle(locale: String): String
  robotsMeta(locale: String): String
  schemaMarkup(locale: String): SeoComponentSchemaMarkup
  slugurl(locale: String): String
  sys: Sys!
  twitterCardType(locale: String): String
}

type SeoComponentCollection {
  items: [SeoComponent]!
  limit: Int!
  skip: Int!
  total: Int!
}

input SeoComponentFilter {
  AND: [SeoComponentFilter]
  OR: [SeoComponentFilter]
  canonicalUrl: String
  canonicalUrl_contains: String
  canonicalUrl_exists: Boolean
  canonicalUrl_in: [String]
  canonicalUrl_not: String
  canonicalUrl_not_contains: String
  canonicalUrl_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  keywords: String
  keywords_contains: String
  keywords_exists: Boolean
  keywords_in: [String]
  keywords_not: String
  keywords_not_contains: String
  keywords_not_in: [String]
  metaDescription: String
  metaDescription_contains: String
  metaDescription_exists: Boolean
  metaDescription_in: [String]
  metaDescription_not: String
  metaDescription_not_contains: String
  metaDescription_not_in: [String]
  metaTitle: String
  metaTitle_contains: String
  metaTitle_exists: Boolean
  metaTitle_in: [String]
  metaTitle_not: String
  metaTitle_not_contains: String
  metaTitle_not_in: [String]
  ogDescription: String
  ogDescription_contains: String
  ogDescription_exists: Boolean
  ogDescription_in: [String]
  ogDescription_not: String
  ogDescription_not_contains: String
  ogDescription_not_in: [String]
  ogImage_exists: Boolean
  ogTitle: String
  ogTitle_contains: String
  ogTitle_exists: Boolean
  ogTitle_in: [String]
  ogTitle_not: String
  ogTitle_not_contains: String
  ogTitle_not_in: [String]
  robotsMeta: String
  robotsMeta_contains: String
  robotsMeta_exists: Boolean
  robotsMeta_in: [String]
  robotsMeta_not: String
  robotsMeta_not_contains: String
  robotsMeta_not_in: [String]
  schemaMarkup_contains: String
  schemaMarkup_exists: Boolean
  schemaMarkup_not_contains: String
  slugurl: String
  slugurl_contains: String
  slugurl_exists: Boolean
  slugurl_in: [String]
  slugurl_not: String
  slugurl_not_contains: String
  slugurl_not_in: [String]
  sys: SysFilter
  twitterCardType: String
  twitterCardType_contains: String
  twitterCardType_exists: Boolean
  twitterCardType_in: [String]
  twitterCardType_not: String
  twitterCardType_not_contains: String
  twitterCardType_not_in: [String]
}

type SeoComponentLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum SeoComponentOrder {
  canonicalUrl_ASC
  canonicalUrl_DESC
  keywords_ASC
  keywords_DESC
  metaTitle_ASC
  metaTitle_DESC
  ogDescription_ASC
  ogDescription_DESC
  ogTitle_ASC
  ogTitle_DESC
  robotsMeta_ASC
  robotsMeta_DESC
  slugurl_ASC
  slugurl_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  twitterCardType_ASC
  twitterCardType_DESC
}

type SeoComponentSchemaMarkup {
  json: JSON!
  links: SeoComponentSchemaMarkupLinks!
}

type SeoComponentSchemaMarkupAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type SeoComponentSchemaMarkupEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type SeoComponentSchemaMarkupLinks {
  assets: SeoComponentSchemaMarkupAssets!
  entries: SeoComponentSchemaMarkupEntries!
  resources: SeoComponentSchemaMarkupResources!
}

type SeoComponentSchemaMarkupResources {
  block: [SeoComponentSchemaMarkupResourcesBlock!]!
  hyperlink: [SeoComponentSchemaMarkupResourcesHyperlink!]!
  inline: [SeoComponentSchemaMarkupResourcesInline!]!
}

type SeoComponentSchemaMarkupResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type SeoComponentSchemaMarkupResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type SeoComponentSchemaMarkupResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

"""
Skills model [See type definition](https://app.contentful.com/spaces/18rw1srlfa5x/content_types/skillsModel)
"""
type SkillsModel implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): SkillsModelLinkingCollections
  logoCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AssetCollection
  skillName(locale: String): String
  skillType(locale: String): [String]
  sourceUrl(locale: String): String
  sys: Sys!
  uid(locale: String): String
}

type SkillsModelCollection {
  items: [SkillsModel]!
  limit: Int!
  skip: Int!
  total: Int!
}

input SkillsModelFilter {
  AND: [SkillsModelFilter]
  OR: [SkillsModelFilter]
  contentfulMetadata: ContentfulMetadataFilter
  logoCollection_exists: Boolean
  skillName: String
  skillName_contains: String
  skillName_exists: Boolean
  skillName_in: [String]
  skillName_not: String
  skillName_not_contains: String
  skillName_not_in: [String]
  skillType_contains_all: [String]
  skillType_contains_none: [String]
  skillType_contains_some: [String]
  skillType_exists: Boolean
  sourceUrl: String
  sourceUrl_contains: String
  sourceUrl_exists: Boolean
  sourceUrl_in: [String]
  sourceUrl_not: String
  sourceUrl_not_contains: String
  sourceUrl_not_in: [String]
  sys: SysFilter
  uid: String
  uid_contains: String
  uid_exists: Boolean
  uid_in: [String]
  uid_not: String
  uid_not_contains: String
  uid_not_in: [String]
}

type SkillsModelLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  workExperienceModelCollection(limit: Int = 100, locale: String, order: [SkillsModelLinkingCollectionsWorkExperienceModelCollectionOrder], preview: Boolean, skip: Int = 0): WorkExperienceModelCollection
}

enum SkillsModelLinkingCollectionsWorkExperienceModelCollectionOrder {
  companyName_ASC
  companyName_DESC
  country_ASC
  country_DESC
  employmentStatus_ASC
  employmentStatus_DESC
  employmentType_ASC
  employmentType_DESC
  endDate_ASC
  endDate_DESC
  jobTitle_ASC
  jobTitle_DESC
  startDate_ASC
  startDate_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  uid_ASC
  uid_DESC
}

enum SkillsModelOrder {
  skillName_ASC
  skillName_DESC
  sourceUrl_ASC
  sourceUrl_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  uid_ASC
  uid_DESC
}

"""
Social links model [See type definition](https://app.contentful.com/spaces/18rw1srlfa5x/content_types/socialLinksModel)
"""
type SocialLinksModel implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  label(locale: String): String
  linkedFrom(allowedLocales: [String]): SocialLinksModelLinkingCollections
  platformName(locale: String): String
  socialUrl(locale: String): String
  sys: Sys!
  uid(locale: String): String
}

type SocialLinksModelCollection {
  items: [SocialLinksModel]!
  limit: Int!
  skip: Int!
  total: Int!
}

input SocialLinksModelFilter {
  AND: [SocialLinksModelFilter]
  OR: [SocialLinksModelFilter]
  contentfulMetadata: ContentfulMetadataFilter
  label: String
  label_contains: String
  label_exists: Boolean
  label_in: [String]
  label_not: String
  label_not_contains: String
  label_not_in: [String]
  platformName: String
  platformName_contains: String
  platformName_exists: Boolean
  platformName_in: [String]
  platformName_not: String
  platformName_not_contains: String
  platformName_not_in: [String]
  socialUrl: String
  socialUrl_contains: String
  socialUrl_exists: Boolean
  socialUrl_in: [String]
  socialUrl_not: String
  socialUrl_not_contains: String
  socialUrl_not_in: [String]
  sys: SysFilter
  uid: String
  uid_contains: String
  uid_exists: Boolean
  uid_in: [String]
  uid_not: String
  uid_not_contains: String
  uid_not_in: [String]
}

type SocialLinksModelLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum SocialLinksModelOrder {
  label_ASC
  label_DESC
  platformName_ASC
  platformName_DESC
  socialUrl_ASC
  socialUrl_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  uid_ASC
  uid_DESC
}

type Sys {
  environmentId: String!
  firstPublishedAt: DateTime
  id: String!

  """The locale that was requested."""
  locale: String
  publishedAt: DateTime
  publishedVersion: Int
  spaceId: String!
}

input SysFilter {
  firstPublishedAt: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_not_in: [DateTime]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  publishedAt: DateTime
  publishedAt_exists: Boolean
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_in: [DateTime]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_not: DateTime
  publishedAt_not_in: [DateTime]
  publishedVersion: Float
  publishedVersion_exists: Boolean
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_in: [Float]
  publishedVersion_lt: Float
  publishedVersion_lte: Float
  publishedVersion_not: Float
  publishedVersion_not_in: [Float]
}

"""
Work experience model [See type definition](https://app.contentful.com/spaces/18rw1srlfa5x/content_types/workExperienceModel)
"""
type WorkExperienceModel implements Entry & _Node {
  _id: ID!
  companyName(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  contributions(locale: String): WorkExperienceModelContributions
  country(locale: String): String
  employmentStatus(locale: String): String
  employmentType(locale: String): String
  endDate(locale: String): DateTime
  jobTitle(locale: String): String
  linkedFrom(allowedLocales: [String]): WorkExperienceModelLinkingCollections
  logo(locale: String, preview: Boolean): Asset
  skillsCollection(limit: Int = 100, locale: String, order: [WorkExperienceModelSkillsCollectionOrder], preview: Boolean, skip: Int = 0, where: SkillsModelFilter): WorkExperienceModelSkillsCollection
  startDate(locale: String): DateTime
  sys: Sys!
  uid(locale: String): String
}

type WorkExperienceModelCollection {
  items: [WorkExperienceModel]!
  limit: Int!
  skip: Int!
  total: Int!
}

type WorkExperienceModelContributions {
  json: JSON!
  links: WorkExperienceModelContributionsLinks!
}

type WorkExperienceModelContributionsAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type WorkExperienceModelContributionsEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type WorkExperienceModelContributionsLinks {
  assets: WorkExperienceModelContributionsAssets!
  entries: WorkExperienceModelContributionsEntries!
  resources: WorkExperienceModelContributionsResources!
}

type WorkExperienceModelContributionsResources {
  block: [WorkExperienceModelContributionsResourcesBlock!]!
  hyperlink: [WorkExperienceModelContributionsResourcesHyperlink!]!
  inline: [WorkExperienceModelContributionsResourcesInline!]!
}

type WorkExperienceModelContributionsResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type WorkExperienceModelContributionsResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type WorkExperienceModelContributionsResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

input WorkExperienceModelFilter {
  AND: [WorkExperienceModelFilter]
  OR: [WorkExperienceModelFilter]
  companyName: String
  companyName_contains: String
  companyName_exists: Boolean
  companyName_in: [String]
  companyName_not: String
  companyName_not_contains: String
  companyName_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  contributions_contains: String
  contributions_exists: Boolean
  contributions_not_contains: String
  country: String
  country_contains: String
  country_exists: Boolean
  country_in: [String]
  country_not: String
  country_not_contains: String
  country_not_in: [String]
  employmentStatus: String
  employmentStatus_contains: String
  employmentStatus_exists: Boolean
  employmentStatus_in: [String]
  employmentStatus_not: String
  employmentStatus_not_contains: String
  employmentStatus_not_in: [String]
  employmentType: String
  employmentType_contains: String
  employmentType_exists: Boolean
  employmentType_in: [String]
  employmentType_not: String
  employmentType_not_contains: String
  employmentType_not_in: [String]
  endDate: DateTime
  endDate_exists: Boolean
  endDate_gt: DateTime
  endDate_gte: DateTime
  endDate_in: [DateTime]
  endDate_lt: DateTime
  endDate_lte: DateTime
  endDate_not: DateTime
  endDate_not_in: [DateTime]
  jobTitle: String
  jobTitle_contains: String
  jobTitle_exists: Boolean
  jobTitle_in: [String]
  jobTitle_not: String
  jobTitle_not_contains: String
  jobTitle_not_in: [String]
  logo_exists: Boolean
  skills: cfSkillsModelNestedFilter
  skillsCollection_exists: Boolean
  startDate: DateTime
  startDate_exists: Boolean
  startDate_gt: DateTime
  startDate_gte: DateTime
  startDate_in: [DateTime]
  startDate_lt: DateTime
  startDate_lte: DateTime
  startDate_not: DateTime
  startDate_not_in: [DateTime]
  sys: SysFilter
  uid: String
  uid_contains: String
  uid_exists: Boolean
  uid_in: [String]
  uid_not: String
  uid_not_contains: String
  uid_not_in: [String]
}

type WorkExperienceModelLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum WorkExperienceModelOrder {
  companyName_ASC
  companyName_DESC
  country_ASC
  country_DESC
  employmentStatus_ASC
  employmentStatus_DESC
  employmentType_ASC
  employmentType_DESC
  endDate_ASC
  endDate_DESC
  jobTitle_ASC
  jobTitle_DESC
  startDate_ASC
  startDate_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  uid_ASC
  uid_DESC
}

type WorkExperienceModelSkillsCollection {
  items: [SkillsModel]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum WorkExperienceModelSkillsCollectionOrder {
  skillName_ASC
  skillName_DESC
  sourceUrl_ASC
  sourceUrl_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  uid_ASC
  uid_DESC
}

interface _Node {
  _id: ID!
}

input cfSkillsModelNestedFilter {
  AND: [cfSkillsModelNestedFilter]
  OR: [cfSkillsModelNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  logoCollection_exists: Boolean
  skillName: String
  skillName_contains: String
  skillName_exists: Boolean
  skillName_in: [String]
  skillName_not: String
  skillName_not_contains: String
  skillName_not_in: [String]
  skillType_contains_all: [String]
  skillType_contains_none: [String]
  skillType_contains_some: [String]
  skillType_exists: Boolean
  sourceUrl: String
  sourceUrl_contains: String
  sourceUrl_exists: Boolean
  sourceUrl_in: [String]
  sourceUrl_not: String
  sourceUrl_not_contains: String
  sourceUrl_not_in: [String]
  sys: SysFilter
  uid: String
  uid_contains: String
  uid_exists: Boolean
  uid_in: [String]
  uid_not: String
  uid_not_contains: String
  uid_not_in: [String]
}